{"ast":null,"code":"var _jsxFileName = \"/home/arcane/Documents/code/web/admin_temp/dashboard/src/components/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ErrorComponent from '../error/ErrorComponent'; // Предположим, что у вас есть компонент для отображения ошибок\nimport LoadingComponent from '../loading/LoadingComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n    axios.get('http://localhost:8000/user/').then(res => {\n      setData(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n      setIsError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100 p-3\",\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6EDkcU5PbuSsesaofET2GVZ0HMs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","axios","useEffect","useState","ErrorComponent","LoadingComponent","jsxDEV","_jsxDEV","App","_s","data","setData","isLoading","setIsLoading","isError","setIsError","get","then","res","console","log","catch","err","finally","fileName","_jsxFileName","lineNumber","columnNumber","className","children","Content","_c","$RefreshReg$"],"sources":["/home/arcane/Documents/code/web/admin_temp/dashboard/src/components/app/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ErrorComponent from '../error/ErrorComponent'; // Предположим, что у вас есть компонент для отображения ошибок\nimport LoadingComponent from '../loading/LoadingComponent'; \n\nfunction App() {\n  const [data, setData] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    axios.get('http://localhost:8000/user/')\n      .then(res => {\n        setData(res.data);\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <LoadingComponent />;\n  }\n\n  if (isError) {\n    return <ErrorComponent />;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper container-fluid\">\n        <div className=\"row h-100 p-3\">\n          <Content data={data} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,yBAAyB,CAAC,CAAC;AACtD,OAAOC,gBAAgB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,KAAK,CAAC;IAEjBd,KAAK,CAACe,GAAG,CAAC,6BAA6B,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACXP,OAAO,CAACO,GAAG,CAACR,IAAI,CAAC;MACjBS,OAAO,CAACC,GAAG,CAACF,GAAG,CAACR,IAAI,CAAC;IACvB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChBP,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDQ,OAAO,CAAC,MAAM;MACbV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE;IACb,oBAAOL,OAAA,CAACF,gBAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7B;EAEA,IAAIb,OAAO,EAAE;IACX,oBAAOP,OAAA,CAACH,cAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA;MAAKqB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACtCtB,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BtB,OAAA,CAACuB,OAAO;UAACpB,IAAI,EAAEA;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAxCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}